科目名: プログラミング実習III
課題: B9
番号: 27020856
氏名: 趙 聖化
作成: 2023年12 月08日

----------------------------------------

[課題 9.1]
円の金額を入力してドルに換算するプログラム

結果：
chosunghwa@joseongcBookAir B9 % g++ 1_1.cpp
chosunghwa@joseongcBookAir B9 % ./a.out
hello, plese enter the money you want to exchange
money(円) => 100
0.68($)
chosunghwa@joseongcBookAir B9 %

感想：
C++はCと違う入力、出力方法を持っているのをわかるようになりました。

----------------------------------------

[課題 9.2]

結果：

chosunghwa@joseongcBookAir B9 % g++ 1_2.cpp
chosunghwa@joseongcBookAir B9 % ./a.out    
交換前：a = 5 b = 6
交換後：a = 6 b = 5
chosunghwa@joseongcBookAir B9 %

感想：

Cとは違うポインタの用い方、参照渡しに関して、勉強ができました。
また、C言語よりC++の方が可視性がいいと感じました。
----------------------------------------
[課題 9.3]
#include <iostream>
#include <assert.h>

class stack
{
private:
    static const int max = 100;
    int data[max];
    int sp;

public:
    void push(int);
    void pop();
    bool empty() const;
    int top() const;
    int size() const;
    stack();
    ~stack();
};

void stack::push(int d)
{
    assert(sp < max);
    data[sp++] = d;
}

void stack::pop()
{
    assert(0 < sp);
    --sp;
}

bool stack::empty() const
{
    return sp == 0;
}

int stack::top() const
{
    return data[sp - 1];
}

int stack::size() const
{
    return sp;
}

stack::stack() { sp = 0; }

stack::~stack()
{
}

int main(void)
{
    stack s;
    s.push(5);
    s.push(8);
    s.push(9);
    std::cout << s.top() << std::endl;
    s.pop();
    std::cout << s.top() << std::endl;
    s.pop();
    s.push(3);
    std::cout << s.size() << std::endl;
    while (!s.empty())
    {
        std::cout << s.top() << std::endl;
        s.pop();
    }
    return 0;
}

結果：
chosunghwa@joseongcBookAir B9 % g++ 1_3.cpp
chosunghwa@joseongcBookAir B9 % ./a.out
9
8
2
3
5
chosunghwa@joseongcBookAir B9 %

感想：
整数型スタックといつクラスを実装しならがら、C++のクラスの実装、オプジェット志向に関して学ぶことができるようになりました。
そして、private, publicがあってlocal変数、全駅変数の使い方を学びました。

----------------------------------------
[課題 9.4]

結果：
chosunghwa@joseongcBookAir B9 % g++ 1_4.cpp
chosunghwa@joseongcBookAir B9 % ./a.out    
Max size of the stack: 100
9
8
2
3
5
chosunghwa@joseongcBookAir B9 %

chosunghwa@joseongcBookAir B9 % g++ 1_4.cpp
chosunghwa@joseongcBookAir B9 % ./a.out    
Max size of the stack: 45
9
8
2
3
5
chosunghwa@joseongcBookAir B9 %
感想：
スタックを割り当てるとき指定したサイズを割り当てる方法に関して学びました。
C++の動的割あたりに関しても学べる課題でした。

----------------------------------------
[課題 9.5]

結果：

chosunghwa@joseongcBookAir B9 % g++ 1_5.cpp
^[[A%                                                                                                                                                            
chosunghwa@joseongcBookAir B9 % ./a.out    
0
1
chosunghwa@joseongcBookAir B9 %

感想：
フレンド関数の使い方、そして、データ隠蔽のたまになるべく使わない方がいいことも学びました。


----------------------------------------
[課題 9.6]

結果：

chosunghwa@joseongcBookAir B9 % g++ 1_6.cpp
chosunghwa@joseongcBookAir B9 % ./a.out
1.11+2.22i
3.33+4.44i
9.99+88.88i
1.11+2.22i
chosunghwa@joseongcBookAir B9 %

chosunghwa@joseongcBookAir B9 % ./a.out
1+2i
2.22+3.14i
4.23+9.99i
7.45+15.13i

感想：

operator+という定義を使ったら演算子＋で関数名を指定できるのが興味深いところでした。


----------------------------------------
[課題 9.7]

結果：

chosunghwa@joseongcBookAir B9 % g++ 1_7.cpp
^[[A%                                                                                                                                                            
chosunghwa@joseongcBookAir B9 % ./a.out    
-0.65+1.32i
-5+10i
chosunghwa@joseongcBookAir B9 %

感想：
減算,乗算を定義するときもOperatorを利用してもっと理解ができました。
----------------------------------------
[課題 9.8]
#include <iostream>

class Complex
{
private:
    double real;
    double imag;

public:
    Complex()
    {
        real = 0.0;
        imag = 0.0;
    }
    Complex(double r, double i)
    {
        real = r;
        imag = i;
    }
    Complex operator+(const Complex &other) const
    {
        double r = real + other.real;
        double i = imag + other.imag;
        return Complex(r, i);
    }
    Complex operator-(const Complex &other) const
    {
        double r = real - other.real;
        double i = imag - other.imag;
        return Complex(r, i);
    }

    Complex operator*(const Complex &other) const
    {
        double r = real * other.real - imag * other.imag;
        double i = real * other.imag + imag * other.real;
        return Complex(r, i);
    }
    ~Complex() {}
    double re() const { return real; }
    double im() const { return imag; }
    void set_re(double r) { real = r; }
    void set_im(double i) { imag = i; }
    void print(std::ostream &os) const
    {
        os << real << "+" << imag << "i";
    }
};

std::ostream &operator<<(std::ostream &os, Complex &c)
{
    c.print(os);
    return os;
}
int main(void)
{
    Complex a[3];
    a[0] = Complex(1.00, 2.00);
    a[1] = a[0] + Complex(0.00, 1.00);
    Complex *c = &(a[2]);
    *c = a[0];
    for (int i = 0; i < 3; i++)
        std::cout << a[i] << std::endl;
    Complex *b = new Complex[3];
    for (int i = 0; i < 3; i++)
        b[i] = a[i] + Complex(1.00, 1.00);
    for (int i = 0; i < 3; i++)
        std::cout << b[i] << std::endl;
    delete[] b;

    return 0;
}

結果：

chosunghwa@joseongcBookAir B9 % g++ 1_8.cpp
chosunghwa@joseongcBookAir B9 % ./a.out
1+2i
1+3i
1+2i
2+3i
2+4i
2+3i
chosunghwa@joseongcBookAir B9 %
感想：


テキストの関数をvoid型ではなくstd::ostream&型とし,3行目で受取ったosを返すのは,連続出力(std::cout <<"a=" <<a <<std::endlなど)を行うため。
のところがまだ難しく完全に理解ができなかったです。


----------------------------------------

[課題 B9 の感想]

C++ とはC 言語とは何が違うか、そしてJavaみたいなオブジェクト指向ということなのを学ぶことができる課題でした。
特に、クラスの使い方、フレンと関数が一番興味深いでした。
しかし、C++という言語を初めて使ってみたのでまだ、深く理解ができない状態です

